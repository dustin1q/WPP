---
import MainLayout from '../layouts/MainLayout.astro';
import '../styles/Render-Patterns.css';
const desc = "It is what I sometimes have called “the separation of concerns”, which, even if not perfectly possible, is yet the only available technique for effective ordering of one’s thoughts, that I know of. This is what I mean by “focussing one’s attention upon some aspect”: it does not mean ignoring the other aspects, it is just doing justice to the fact that from this aspect’s point of view, the other is irrelevant. It is being one- and multiple-track-minded simultaneously.– Edsger W. Dijkstra"; 
---
<MainLayout title="Separation of Concerns (SoC)" desc= {desc}>
<main>
    <article>
        <section>
            <p>
                Separation of Concerns is a programming principle that encourages the grouping of functionality in ways that reduce overlap.
                 In browser based architectures, a number of these groupings have been secretly identified for us through the browser engine API.
                 While we may not always use these APIs, we should take advantage of them as much as we can, and consider their designs as inspiration to our own.
                These groupings span across HTML, CSS and Javascript. As engineers we often forget to leverage these groupings and unknowingly create redundancies in one or more of these languages.
</p>
            <p>
                Not to be confused with SoC in context to Model View Controller (MVC). This POV addresses the broader UI engineering bowndries we recognize in HTML, CSS and their relationship with Javascript. Too often we see solutions built in javascript mimicking something that could otherwise have been built natively in HTML or CSS. Today we’re seeing powerful and emerging capabilities in HTML and CSS that challenge patterns and solutions often solved using javascript. As these languages mature there is a growing need to establish SoC principals around them. 
            </p>
            <h3>The Three Body Problem</h3>
            <p>
                Web based UI Architecture begins with 3 primary concerns, HTML, CSS and Javascript. 
                What complicates separation between these languages is their ability to overlap each other in capabilities. 
                This complexity is compounded when we consider one language can solve a given problem more efficiently then another. 
             </p>
             <p>
                Engineers will often solve a UI problem without considering SoC. For example: Animating DOM elements with javascript instead of using CSS. 
                This often leads to inefficiencies in performance, and avoidable complexities in their solutions.   
                For this reason we need to determine which language solves the problem more efficiently. 
            </p>
            <p>
                So how do we determine which one is more efficient?</p>
            <p>
                Having a structured SoC can help us make informed architectural decisions when solutioning for the web. 
                One way to achieve this is to prioritize our concerns by language.
            </p>
            <p>Prioritizing concerns for low-complexity performant solutions:</p>
            <ol>
                <li><strong>Critical rendering path (CRP)</strong> - HTML & CSS are first-class citizens in the CRP</li>
                <li><strong>Leverage Native HTML</strong> - Always use what the browser gives you for free.(HTML & CSS)</li>
                <li><strong>Logic</strong> - Separate Presentation logic (CSS) from Procedural logic (Javascript)</li>
                
            </ol>
            <h3>
               SoC UI Architecture in order of priority:
            </h3>
            <div class="cardholder">
                <div class="card">
                    <svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" width="100" height="100" viewBox="0 0 48 48">
                        <path fill="#E65100" d="M41,5H7l3,34l14,4l14-4L41,5L41,5z"></path><path fill="#FF6D00" d="M24 8L24 39.9 35.2 36.7 37.7 8z"></path><path fill="#FFF" d="M24,25v-4h8.6l-0.7,11.5L24,35.1v-4.2l4.1-1.4l0.3-4.5H24z M32.9,17l0.3-4H24v4H32.9z"></path><path fill="#EEE" d="M24,30.9v4.2l-7.9-2.6L15.7,27h4l0.2,2.5L24,30.9z M19.1,17H24v-4h-9.1l0.7,12H24v-4h-4.6L19.1,17z"></path>
                    </svg>
                    <p>1. HTML</p>
                </div>
                <div class="card">
                    <svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" width="100" height="100" viewBox="0 0 48 48">
                        <path fill="#0277BD" d="M41,5H7l3,34l14,4l14-4L41,5L41,5z"></path><path fill="#039BE5" d="M24 8L24 39.9 35.2 36.7 37.7 8z"></path><path fill="#FFF" d="M33.1 13L24 13 24 17 28.9 17 28.6 21 24 21 24 25 28.4 25 28.1 29.5 24 30.9 24 35.1 31.9 32.5 32.6 21 32.6 21z"></path><path fill="#EEE" d="M24,13v4h-8.9l-0.3-4H24z M19.4,21l0.2,4H24v-4H19.4z M19.8,27h-4l0.3,5.5l7.9,2.6v-4.2l-4.1-1.4L19.8,27z"></path>
                    </svg>
                    <p>2. CSS</p>
                </div>
                <div class="card">
                    <svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" width="100" height="100" viewBox="0 0 48 48">
                        <path fill="#ffd600" d="M6,42V6h36v36H6z"></path><path fill="#000001" d="M29.538 32.947c.692 1.124 1.444 2.201 3.037 2.201 1.338 0 2.04-.665 2.04-1.585 0-1.101-.726-1.492-2.198-2.133l-.807-.344c-2.329-.988-3.878-2.226-3.878-4.841 0-2.41 1.845-4.244 4.728-4.244 2.053 0 3.528.711 4.592 2.573l-2.514 1.607c-.553-.988-1.151-1.377-2.078-1.377-.946 0-1.545.597-1.545 1.377 0 .964.6 1.354 1.985 1.951l.807.344C36.452 29.645 38 30.839 38 33.523 38 36.415 35.716 38 32.65 38c-2.999 0-4.702-1.505-5.65-3.368L29.538 32.947zM17.952 33.029c.506.906 1.275 1.603 2.381 1.603 1.058 0 1.667-.418 1.667-2.043V22h3.333v11.101c0 3.367-1.953 4.899-4.805 4.899-2.577 0-4.437-1.746-5.195-3.368L17.952 33.029z"></path>
                    </svg>
                    <p>3. Javascript</p>
                </div>
            </div>
            <p>
                Begin with HTML and falback to CSS, then Javascript. With each consideration we can seperate solutioning accross these three languages and leverage strengths and capabilities of each. 
            </p>
            <h3>State MGMT Concerns</h3>
            <p>
                Accounting for state management is something that often leads to over architected solutions. As engineers, it's important for us to consider a ranking of our state management requirements when architecting solutions. Similar to data storage, requirements for state management can be ranked on a scale of high or low volatility (State Volatility). In other words, application state is easily erased or can persist forever, or persist somewhere in between. For example: The state of an accordion [expanded] can be lost on page refresh (high volatility) where a Session ID can persist after a page refresh (low volatility). In most high volatility scenarios, engineers are encouraged to architect solutions to lower state volatility. While lowering state volatility sounds good, it also means increasing application complexity. Adding complexity to lower state volatility is a tradeoff we need to consider.  In the above example, we can add javascript to persist accordion state on page refresh. While this reduces state volatility on the accordion it might not be necessary and likely adds little value to the overall user experience and application logic.
As we separate these concerns we want to minimize complexities leading to over-architecture, and persist state (lower state volatility) only where necessary. 


            </p>
            <p>
                The following list prioritizes state management techniques ranked from high volatility, low complexity (4) to low volatility, high complexity (1) approaches. 
            </p>
            <ol>
                <li>Server side State - (Session ID, DB etc.)</li>
                <li>Application State - JS Client side (cookies, local storage, service workers)</li>
                <li>UI Design state - CSS (variables, has() not() etc.)</li>
                <li>UI State - HTML(form selection, anchor tags etc.)</li>
            </ol>
            
        </section>
        <section>
            <h3>Additional Concerns</h3>  
            
            <div class="cardholder">
                <div class="card">
                    <svg xmlns="http://www.w3.org/2000/svg" width="100" height="100" version="1" viewBox="0 0 48 48" enable-background="new 0 0 48 48">
                        <g fill="#FF9800"><rect x="1" y="38" width="46" height="2"/><rect x="25" y="18" width="4" height="16"/><rect x="31" y="18" width="4" height="16"/><rect x="37" y="18" width="4" height="16"/><rect x="19" y="18" width="4" height="16"/><rect x="13" y="18" width="4" height="16"/><rect x="7" y="18" width="4" height="16"/><polygon points="43,16 5,16 5,13 24,4 43,13"/><rect x="5" y="34" width="38" height="2"/>
                        </g>
                        <g fill="#EF6C00"><rect x="25" y="16" width="4" height="2"/><rect x="31" y="16" width="4" height="2"/><rect x="37" y="16" width="4" height="2"/><rect x="19" y="16" width="4" height="2"/><rect x="13" y="16" width="4" height="2"/><rect x="7" y="16" width="4" height="2"/><rect x="3" y="36" width="42" height="2"/><circle cx="24" cy="11" r="2"/>
                        </g>
                    </svg>
                    <p>3rd Party Libraries</p>
                </div>
                <div class="card">
                    <svg xmlns="http://www.w3.org/2000/svg" version="1.1" viewBox="0 0 1920 1080" width="100" height="100">
                        <!-- Generator: Adobe Illustrator 28.7.1, SVG Export Plug-In . SVG Version: 1.2.0 Build 142)  -->
                        <g>
                        <g id="Layer_1">
                        <g>
                            <path d="M769.31,454.19v-51.55l120.85-43.66v29.58l-116.34,39.72,116.34,40v29.58l-120.85-43.66Z"/>
                            <path d="M983.39,304.9h35.21l-81.97,241.69h-35.21l81.97-241.69Z"/>
                            <path d="M1029.87,468.28l116.34-40-116.34-39.72v-29.58l120.85,43.66v51.55l-120.85,43.66v-29.58Z"/>
                        </g>
                            <path d="M1448.47,328.64v81.26h-136.15V107.46h-704.6v302.45h-136.15v-81.26h-249.04v194.2h249.04v-81.26h136.15v200.7h336.47v136.15h-108.69v194.2h249.04v-194.2h-108.69v-136.15h336.47v-200.7h136.15v81.26h249.04v-194.2h-249.04ZM439.89,491.17h-185.7v-130.86h185.7v130.86ZM1052.87,940.96h-185.7v-130.86h185.7v130.86ZM639.38,139.13h641.26v70.07h-641.26v-70.07ZM1280.65,610.61h-641.26V240.87h641.26v369.74ZM1665.84,491.17h-185.7v-130.86h185.7v130.86Z"/>
                        </g>
                        </g>
                    </svg>
                    <p>Framworks</p>
                </div>
                <div class="card">
                <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="100" height="100" viewBox="0 0 256 256" xml:space="preserve">
                    <defs>
                    </defs>
                    <g style="stroke: none; stroke-width: 0; stroke-dasharray: none; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; fill: none; fill-rule: nonzero; opacity: 1;" transform="translate(1.4065934065934016 1.4065934065934016) scale(2.81 2.81)">
                        <path d="M 42.007 48.139 c 0.552 0 1 -0.447 1 -1 s -0.448 -1 -1 -1 H 35.14 c -0.552 0 -1 0.447 -1 1 v 13.576 c 0 0.553 0.448 1 1 1 h 6.867 c 0.552 0 1 -0.447 1 -1 s -0.448 -1 -1 -1 H 36.14 v -4.788 h 3.785 c 0.552 0 1 -0.447 1 -1 s -0.448 -1 -1 -1 H 36.14 v -4.788 H 42.007 z" style="stroke: none; stroke-width: 1; stroke-dasharray: none; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; fill: rgb(0,0,0); fill-rule: nonzero; opacity: 1;" transform=" matrix(1 0 0 1 0 0) " stroke-linecap="round"/>
                        <path d="M 29.293 60.715 v -4.192 c 0 -1.022 -0.433 -1.94 -1.12 -2.596 c 0.687 -0.655 1.12 -1.574 1.12 -2.596 v -1.597 c 0 -1.982 -1.613 -3.596 -3.596 -3.596 h -4.674 c -0.552 0 -1 0.447 -1 1 v 6.788 v 6.788 c 0 0.553 0.448 1 1 1 s 1 -0.447 1 -1 v -5.788 h 3.674 c 0.88 0 1.596 0.716 1.596 1.596 v 4.192 c 0 0.553 0.448 1 1 1 S 29.293 61.268 29.293 60.715 z M 22.023 52.927 v -4.788 h 3.674 c 0.88 0 1.596 0.716 1.596 1.596 v 1.597 c 0 0.88 -0.716 1.596 -1.596 1.596 H 22.023 z" style="stroke: none; stroke-width: 1; stroke-dasharray: none; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; fill: rgb(0,0,0); fill-rule: nonzero; opacity: 1;" transform=" matrix(1 0 0 1 0 0) " stroke-linecap="round"/>
                        <path d="M 68.977 48.139 c 0.553 0 1 -0.447 1 -1 s -0.447 -1 -1 -1 h -8.564 c -0.553 0 -1 0.447 -1 1 s 0.447 1 1 1 h 3.282 v 12.576 c 0 0.553 0.447 1 1 1 s 1 -0.447 1 -1 V 48.139 H 68.977 z" style="stroke: none; stroke-width: 1; stroke-dasharray: none; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; fill: rgb(0,0,0); fill-rule: nonzero; opacity: 1;" transform=" matrix(1 0 0 1 0 0) " stroke-linecap="round"/>
                        <path d="M 50.602 48.139 h 1.259 c 0.961 0 1.742 0.734 1.742 1.637 c 0 0.553 0.447 1 1 1 s 1 -0.447 1 -1 c 0 -2.005 -1.679 -3.637 -3.742 -3.637 h -1.259 c -2.145 0 -3.889 1.694 -3.889 3.777 v 1.233 c 0 2.083 1.744 3.777 3.889 3.777 h 1.113 c 1.041 0 1.888 0.797 1.888 1.777 v 1.233 c 0 0.98 -0.847 1.777 -1.888 1.777 h -1.259 c -0.961 0 -1.743 -0.734 -1.743 -1.638 c 0 -0.553 -0.447 -1 -1 -1 s -1 0.447 -1 1 c 0 2.006 1.679 3.638 3.743 3.638 h 1.259 c 2.144 0 3.888 -1.694 3.888 -3.777 v -1.233 c 0 -2.083 -1.744 -3.777 -3.888 -3.777 h -1.113 c -1.041 0 -1.889 -0.797 -1.889 -1.777 v -1.233 C 48.713 48.936 49.561 48.139 50.602 48.139 z" style="stroke: none; stroke-width: 1; stroke-dasharray: none; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; fill: rgb(0,0,0); fill-rule: nonzero; opacity: 1;" transform=" matrix(1 0 0 1 0 0) " stroke-linecap="round"/>
                        <path d="M 34.812 67.352 h -2.572 c -2.166 0 -3.927 1.762 -3.927 3.928 v 10.648 c 0 0.553 0.448 1 1 1 s 1 -0.447 1 -1 V 76.14 h 6.427 v 5.788 c 0 0.553 0.448 1 1 1 s 1 -0.447 1 -1 V 71.279 C 38.739 69.113 36.977 67.352 34.812 67.352 z M 30.312 74.14 v -2.86 c 0 -1.063 0.865 -1.928 1.927 -1.928 h 2.572 c 1.063 0 1.927 0.865 1.927 1.928 v 2.86 H 30.312 z" style="stroke: none; stroke-width: 1; stroke-dasharray: none; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; fill: rgb(0,0,0); fill-rule: nonzero; opacity: 1;" transform=" matrix(1 0 0 1 0 0) " stroke-linecap="round"/>
                        <path d="M 58.991 67.352 c -0.553 0 -1 0.447 -1 1 v 13.576 c 0 0.553 0.447 1 1 1 s 1 -0.447 1 -1 V 68.352 C 59.991 67.799 59.544 67.352 58.991 67.352 z" style="stroke: none; stroke-width: 1; stroke-dasharray: none; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; fill: rgb(0,0,0); fill-rule: nonzero; opacity: 1;" transform=" matrix(1 0 0 1 0 0) " stroke-linecap="round"/>
                        <path d="M 49.896 67.352 h -4.97 c -0.552 0 -1 0.447 -1 1 v 7.615 v 5.961 c 0 0.553 0.448 1 1 1 s 1 -0.447 1 -1 v -4.961 h 3.97 c 2.01 0 3.645 -1.636 3.645 -3.646 v -2.324 C 53.54 68.987 51.905 67.352 49.896 67.352 z M 51.54 73.321 c 0 0.907 -0.737 1.646 -1.645 1.646 h -3.97 v -5.615 h 3.97 c 0.907 0 1.645 0.738 1.645 1.646 V 73.321 z" style="stroke: none; stroke-width: 1; stroke-dasharray: none; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; fill: rgb(0,0,0); fill-rule: nonzero; opacity: 1;" transform=" matrix(1 0 0 1 0 0) " stroke-linecap="round"/>
                        <path d="M 78.982 36.567 c -0.303 -2.623 -0.967 -5.181 -1.977 -7.614 c -0.212 -0.51 -0.795 -0.752 -1.308 -0.54 c -0.51 0.211 -0.752 0.797 -0.54 1.307 c 1.005 2.419 1.641 4.972 1.892 7.587 c 0.032 0.345 0.242 0.649 0.554 0.802 C 84.017 41.267 88 47.664 88 54.804 c 0 10.255 -8.344 18.598 -18.599 18.598 c -0.553 0 -1 0.447 -1 1 s 0.447 1 1 1 C 80.76 75.401 90 66.161 90 54.803 C 90 47.081 85.793 40.145 78.982 36.567 z" style="stroke: none; stroke-width: 1; stroke-dasharray: none; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; fill: rgb(0,0,0); fill-rule: nonzero; opacity: 1;" transform=" matrix(1 0 0 1 0 0) " stroke-linecap="round"/>
                        <path d="M 20.599 73.401 C 10.343 73.401 2 65.058 2 54.803 s 8.343 -18.598 18.599 -18.598 h 3.127 c 0.487 0 0.904 -0.351 0.986 -0.832 c 1.265 -7.406 5.661 -13.947 12.061 -17.947 c 0.469 -0.293 0.611 -0.91 0.318 -1.378 c -0.292 -0.468 -0.91 -0.61 -1.378 -0.318 c -6.644 4.152 -11.279 10.851 -12.818 18.475 h -2.296 C 9.241 34.205 0 43.445 0 54.804 c 0 11.357 9.241 20.598 20.599 20.598 c 0.552 0 1 -0.447 1 -1 S 21.151 73.401 20.599 73.401 z" style="stroke: none; stroke-width: 1; stroke-dasharray: none; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; fill: rgb(0,0,0); fill-rule: nonzero; opacity: 1;" transform=" matrix(1 0 0 1 0 0) " stroke-linecap="round"/>
                        <path d="M 59.024 39.768 c 0.38 0.157 0.779 0.237 1.188 0.237 c 0.407 0 0.807 -0.08 1.188 -0.237 l 3.303 -1.368 c 1.58 -0.655 2.332 -2.473 1.678 -4.051 c -0.168 -0.407 0.001 -0.697 0.173 -0.869 s 0.46 -0.342 0.869 -0.172 c 0.764 0.315 1.606 0.316 2.374 0 c 0.765 -0.318 1.36 -0.914 1.677 -1.678 l 1.368 -3.303 c 0.316 -0.764 0.316 -1.606 -0.001 -2.373 c -0.316 -0.766 -0.912 -1.362 -1.677 -1.679 c -0.407 -0.168 -0.492 -0.494 -0.492 -0.736 c 0 -0.243 0.085 -0.568 0.49 -0.736 c 0.766 -0.316 1.361 -0.913 1.679 -1.679 c 0.317 -0.765 0.317 -1.608 0 -2.374 l -1.367 -3.301 c -0.316 -0.766 -0.912 -1.362 -1.68 -1.68 c -0.765 -0.316 -1.607 -0.315 -2.374 0 c -0.404 0.169 -0.693 0 -0.867 -0.174 c -0.171 -0.171 -0.341 -0.46 -0.172 -0.867 c 0.317 -0.765 0.317 -1.608 0 -2.374 c -0.316 -0.765 -0.913 -1.36 -1.679 -1.678 l -3.303 -1.369 c -0.766 -0.316 -1.607 -0.317 -2.373 0 s -1.361 0.913 -1.679 1.679 c -0.168 0.406 -0.492 0.491 -0.735 0.491 s -0.568 -0.085 -0.736 -0.491 C 55.22 7.41 53.403 6.656 51.823 7.31 L 48.52 8.678 c -0.764 0.316 -1.359 0.912 -1.677 1.678 c -0.316 0.765 -0.317 1.607 -0.001 2.373 c 0.169 0.408 0 0.696 -0.175 0.87 c -0.17 0.171 -0.459 0.339 -0.866 0.171 c -1.578 -0.654 -3.396 0.098 -4.052 1.677 l -1.368 3.303 c -0.317 0.766 -0.317 1.609 0 2.374 c 0.317 0.765 0.913 1.361 1.678 1.678 c 0.407 0.168 0.492 0.493 0.492 0.736 c 0 0.243 -0.085 0.567 -0.492 0.736 h 0 c -1.579 0.655 -2.331 2.472 -1.677 4.051 l 1.369 3.304 c 0.655 1.577 2.473 2.329 4.052 1.677 c 0.405 -0.167 0.696 0.001 0.871 0.175 c 0.14 0.139 0.349 0.437 0.171 0.866 c -0.654 1.579 0.098 3.396 1.677 4.051 l 3.305 1.369 c 1.579 0.652 3.396 -0.102 4.051 -1.678 c 0.168 -0.407 0.493 -0.492 0.736 -0.492 c 0.242 0 0.567 0.085 0.735 0.493 C 57.664 38.855 58.26 39.451 59.024 39.768 z M 56.611 35.598 c -0.904 0 -2.058 0.454 -2.584 1.726 c -0.232 0.56 -0.878 0.829 -1.438 0.596 l -3.304 -1.369 c -0.561 -0.232 -0.827 -0.877 -0.595 -1.438 c 0.528 -1.278 0.031 -2.413 -0.607 -3.047 c -0.639 -0.639 -1.774 -1.134 -3.047 -0.607 c -0.558 0.233 -1.206 -0.036 -1.439 -0.596 l -1.368 -3.303 c -0.232 -0.56 0.035 -1.205 0.595 -1.438 l -0.382 -0.924 l 0.383 0.924 c 1.272 -0.527 1.726 -1.68 1.726 -2.582 c 0.001 -0.904 -0.451 -2.058 -1.726 -2.586 c -0.271 -0.112 -0.483 -0.324 -0.596 -0.597 c -0.113 -0.271 -0.113 -0.57 0 -0.842 l 1.368 -3.303 c 0.233 -0.56 0.878 -0.829 1.438 -0.596 c 1.275 0.528 2.412 0.033 3.045 -0.604 c 0.641 -0.638 1.138 -1.774 0.609 -3.049 c -0.112 -0.272 -0.112 -0.572 0 -0.843 c 0.112 -0.272 0.324 -0.483 0.595 -0.596 l 3.303 -1.369 c 0.56 -0.231 1.206 0.035 1.439 0.597 c 0.527 1.272 1.681 1.725 2.584 1.725 s 2.057 -0.454 2.583 -1.726 c 0.112 -0.271 0.324 -0.483 0.597 -0.596 c 0.276 -0.115 0.568 -0.114 0.843 0 l 3.302 1.368 c 0.272 0.113 0.484 0.324 0.597 0.596 s 0.112 0.571 0 0.842 c -0.528 1.274 -0.033 2.411 0.604 3.046 c 0.639 0.642 1.778 1.136 3.048 0.608 c 0.272 -0.113 0.572 -0.113 0.844 0 c 0.272 0.113 0.483 0.324 0.596 0.596 l 1.368 3.303 c 0.112 0.271 0.112 0.571 0 0.843 s -0.324 0.483 -0.596 0.596 c -1.272 0.527 -1.726 1.681 -1.726 2.584 s 0.453 2.056 1.727 2.584 c 0.271 0.112 0.482 0.324 0.595 0.596 c 0.113 0.272 0.113 0.571 0.001 0.841 l -1.368 3.303 c -0.112 0.272 -0.324 0.483 -0.595 0.596 c -0.276 0.114 -0.567 0.114 -0.844 0 c -1.272 -0.527 -2.409 -0.032 -3.047 0.605 c -0.64 0.638 -1.135 1.773 -0.607 3.049 c 0.232 0.561 -0.035 1.206 -0.596 1.438 l -3.302 1.368 c -0.273 0.113 -0.572 0.114 -0.844 0 c -0.272 -0.113 -0.484 -0.324 -0.597 -0.595 C 58.668 36.052 57.515 35.598 56.611 35.598 z" style="stroke: none; stroke-width: 1; stroke-dasharray: none; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; fill: rgb(0,0,0); fill-rule: nonzero; opacity: 1;" transform=" matrix(1 0 0 1 0 0) " stroke-linecap="round"/>
                        <path d="M 63.411 23.539 c 0 -3.75 -3.051 -6.8 -6.8 -6.8 c -3.75 0 -6.801 3.05 -6.801 6.8 s 3.051 6.8 6.801 6.8 C 60.36 30.338 63.411 27.288 63.411 23.539 z M 56.611 28.338 c -2.647 0 -4.801 -2.153 -4.801 -4.8 s 2.153 -4.8 4.801 -4.8 c 2.646 0 4.8 2.153 4.8 4.8 S 59.258 28.338 56.611 28.338 z" style="stroke: none; stroke-width: 1; stroke-dasharray: none; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; fill: rgb(0,0,0); fill-rule: nonzero; opacity: 1;" transform=" matrix(1 0 0 1 0 0) " stroke-linecap="round"/>
                    </g>
                    </svg>
                    <p>API Services</p>
                </div>

                <div class="card">
                    <svg xmlns="http://www.w3.org/2000/svg" id="Layer_1" width="100" height="100" data-name="Layer 1" viewBox="0 0 122.88 88.12"><defs></defs>
                        <path class="cls-1" d="M59.3,10.11a32.17,32.17,0,0,0-4.28.13,30.16,30.16,0,0,0-15.62,6.1A29.31,29.31,0,0,0,28.67,34.48L28.19,37l-2.5.44a35.19,35.19,0,0,0-6.56,1.77,21.57,21.57,0,0,0-5,2.67,16.1,16.1,0,0,0-3,2.79,17,17,0,0,0-3.82,11.1A20.1,20.1,0,0,0,11.12,67.3a18.84,18.84,0,0,0,3.16,3.4A18.52,18.52,0,0,0,16,72c0,.46,0,.93,0,1.41a16.36,16.36,0,0,0,.54,4.26,7.1,7.1,0,0,0,.2.76l.19.53a7,7,0,0,0-.37,1.4L15.62,80a23.17,23.17,0,0,1-6-3.63,25.82,25.82,0,0,1-4.4-4.72A27.53,27.53,0,0,1,0,55.79,24.32,24.32,0,0,1,5.52,39.93a23.62,23.62,0,0,1,4.34-4,29.66,29.66,0,0,1,6.64-3.55A38.82,38.82,0,0,1,22,30.67,36.15,36.15,0,0,1,34.92,10.52,37.54,37.54,0,0,1,54.34,2.93,39.87,39.87,0,0,1,64,3.2a10.35,10.35,0,0,0-.52,2.13c0,.26-.06.53-.08.79a11.37,11.37,0,0,0-1.39.9,10.59,10.59,0,0,0-2.75,3.09ZM78.84,76.26v6.56a2.29,2.29,0,0,0,.77.35l-.1,4.53a26.54,26.54,0,0,1-3.41.39,5,5,0,0,1-1.69-.28,2.43,2.43,0,0,1-1-.55L73.13,87a9.69,9.69,0,0,1-4.81,1.12,6.23,6.23,0,0,1-4.26-1.3,5.39,5.39,0,0,1-1.43-4.16c0-1.92.55-3.21,1.62-3.85a11.36,11.36,0,0,1,5.14-1.1l2.3-.1V76.8c0-.4-.45-.61-1.34-.61-1.93,0-3.89.15-5.81.32l-1.05.1-.16-4.85A30,30,0,0,1,71,70.64a12.32,12.32,0,0,1,5.65,1.08c1.44.76,2.17,2.31,2.17,4.54ZM39.48,72.44c-3-.32-5.19-.48-6.55-.48a13.58,13.58,0,0,0-2.38.11.46.46,0,0,0-.33.47.6.6,0,0,0,.38.54,16,16,0,0,0,2.41.64,33.59,33.59,0,0,1,3.32.88,7.82,7.82,0,0,1,2.33,1.21A3.74,3.74,0,0,1,40,77.72a11.36,11.36,0,0,1,.33,3q0,4-2.11,5.66c-1.4,1.12-3.52,1.69-6.35,1.69a34.22,34.22,0,0,1-4.29-.29c-1.5-.19-2.66-.38-3.47-.57L22.91,87l.32-5.65a59.64,59.64,0,0,0,8,.7c1.11,0,1.66-.24,1.66-.74,0-.21-.13-.36-.38-.46a14.19,14.19,0,0,0-2.08-.4c-3-.47-5-1.2-6.08-2.19s-1.61-2.61-1.61-4.86q0-4.32,2.07-5.91c1.39-1.06,3.52-1.6,6.39-1.6a50.13,50.13,0,0,1,7.12.61l1.34.22-.19,5.75Zm59.52,0Q94.5,72,92.45,72a14.32,14.32,0,0,0-2.37.11.46.46,0,0,0-.34.47.59.59,0,0,0,.39.54,16.7,16.7,0,0,0,2.4.64,31.27,31.27,0,0,1,3.33.88,7.76,7.76,0,0,1,2.32,1.21,3.7,3.7,0,0,1,1.38,1.91,11.36,11.36,0,0,1,.33,3q0,4-2.1,5.66c-1.41,1.12-3.53,1.69-6.36,1.69a34.22,34.22,0,0,1-4.29-.29c-1.5-.19-2.68-.39-3.46-.57L82.43,87l.32-5.65a59.77,59.77,0,0,0,8,.7c1.11,0,1.66-.24,1.66-.74a.49.49,0,0,0-.38-.46,18,18,0,0,0-2.07-.4c-3-.44-5-1.2-6.09-2.19s-1.61-2.61-1.61-4.86c0-2.88.7-4.86,2.08-5.91s3.51-1.6,6.38-1.6a43.62,43.62,0,0,1,7.12.61l1.34.22L99,72.44ZM49.92,84.06a3.56,3.56,0,0,0,2.3-1V80.62l-2.06.13a1.54,1.54,0,0,0-1.58,1.72c0,1.06.45,1.59,1.34,1.59Zm19.7,0a3.56,3.56,0,0,0,2.3-1V80.62l-2.06.13a1.54,1.54,0,0,0-1.57,1.72c0,1.06.44,1.59,1.33,1.59Zm-10.48-7.8v6.56a2.29,2.29,0,0,0,.77.35l-.09,4.53a26.82,26.82,0,0,1-3.42.39,5,5,0,0,1-1.69-.28,2.5,2.5,0,0,1-1-.55L53.43,87a9.68,9.68,0,0,1-4.8,1.12,6.21,6.21,0,0,1-4.27-1.3,5.36,5.36,0,0,1-1.43-4.16c0-1.92.54-3.21,1.62-3.85a11.24,11.24,0,0,1,5.15-1.1l2.29-.1V76.8c0-.4-.44-.61-1.34-.61-1.94,0-3.89.15-5.81.32l-1.05.1-.16-4.85a30,30,0,0,1,7.69-1.12A12.26,12.26,0,0,1,57,71.72c1.43.77,2.16,2.3,2.16,4.54ZM101.75,6.9l2.51,3.31a2,2,0,0,1-.38,2.78l-2.67,2a15.53,15.53,0,0,1,.93,4.08l3,.41a2,2,0,0,1,1.7,2.24l-.56,4.13a2,2,0,0,1-2.24,1.7l-3.32-.46a15.33,15.33,0,0,1-2.24,3.53l1.86,2.45a2,2,0,0,1-.39,2.79L96.67,38.4A2,2,0,0,1,93.89,38l-2-2.67a15.2,15.2,0,0,1-4.09.92l-.41,3A2,2,0,0,1,85.11,41L81,40.45a2,2,0,0,1-1.7-2.25l.46-3.31a16.2,16.2,0,0,1-3.54-2.24l-2.44,1.86A2,2,0,0,1,71,34.13l-2.51-3.31A2,2,0,0,1,68.85,28l2.67-2a15.21,15.21,0,0,1-.92-4.08l-3-.42a2,2,0,0,1-1.7-2.24l.56-4.12a2,2,0,0,1,2.24-1.7L72,13.9a16.13,16.13,0,0,1,2.24-3.53L72.36,7.93a2,2,0,0,1,.38-2.78l3.31-2.51A2,2,0,0,1,78.84,3l2,2.66a15.92,15.92,0,0,1,4.08-.92l.42-3A2,2,0,0,1,87.6,0l4.12.56a2,2,0,0,1,1.7,2.24L93,6.14a15.83,15.83,0,0,1,3.54,2.24L99,6.53a2,2,0,0,1,2.8.37ZM58.67,32.54a1.33,1.33,0,0,0-1.89.33l-1.19,1.69a10,10,0,0,0-1.34-.45,13.33,13.33,0,0,0-1.4-.28l-.38-2.22a1.34,1.34,0,0,0-1.57-1.1L48.12,31a1.29,1.29,0,0,0-.86.55,1.25,1.25,0,0,0-.23,1l.35,2a9.48,9.48,0,0,0-1.27.65A10.6,10.6,0,0,0,45,36l-1.87-1.3a1.24,1.24,0,0,0-1-.24,1.35,1.35,0,0,0-.88.57l-1.6,2.29A1.33,1.33,0,0,0,40,39.24l1.69,1.19a8.79,8.79,0,0,0-.45,1.34,13.37,13.37,0,0,0-.29,1.4l-2.21.38a1.34,1.34,0,0,0-1.1,1.57l.49,2.78a1.29,1.29,0,0,0,.55.86,1.25,1.25,0,0,0,1,.23l2-.35a9.48,9.48,0,0,0,.65,1.27,12,12,0,0,0,.79,1.17l-1.3,1.85a1.24,1.24,0,0,0-.24,1,1.28,1.28,0,0,0,.57.88l2.29,1.63a1.39,1.39,0,0,0,1,.21,1.33,1.33,0,0,0,.88-.54l1.19-1.72a8.79,8.79,0,0,0,1.34.45,13.74,13.74,0,0,0,1.39.29l.39,2.21a1.34,1.34,0,0,0,1.57,1.1L55,57.94a1.35,1.35,0,0,0,1.1-1.56l-.35-2A9.48,9.48,0,0,0,57,53.7a12,12,0,0,0,1.17-.79L60,54.21a1.27,1.27,0,0,0,1,.24,1.28,1.28,0,0,0,.87-.57l1.63-2.29a1.39,1.39,0,0,0,.21-1,1.41,1.41,0,0,0-.54-.88l-1.72-1.19a10,10,0,0,0,.45-1.34,13.68,13.68,0,0,0,.28-1.39l2.22-.39a1.34,1.34,0,0,0,1.1-1.57L65,41.05a1.29,1.29,0,0,0-.55-.87,1.25,1.25,0,0,0-1-.23l-2,.35A11.58,11.58,0,0,0,60.78,39,9.7,9.7,0,0,0,60,37.89L61.29,36a1.24,1.24,0,0,0,.24-1,1.4,1.4,0,0,0-.57-.88l-2.29-1.6Zm-7.83,7.88a3.94,3.94,0,0,1,1.64,0A4.07,4.07,0,0,1,55,42.24a4.17,4.17,0,0,1,.55,3.16,4.14,4.14,0,0,1-3.3,3.13,4.06,4.06,0,0,1-4.17-1.83,4.1,4.1,0,0,1-.6-1.52A4.06,4.06,0,0,1,49.32,41a3.92,3.92,0,0,1,1.52-.59Zm36.63-28a8.18,8.18,0,1,1-9.21,7,8.17,8.17,0,0,1,9.21-7ZM114,29.87c.38.36.74.73,1.11,1.12a29.19,29.19,0,0,1,3,3.9,33,33,0,0,1,4.77,17.93c-.07,6.31-1.77,12.59-5.25,17.21A27.45,27.45,0,0,1,109,77.45c-.77.43-1.58.84-2.41,1.22l0-.33a14.25,14.25,0,0,0-.49-2.52h0a10.33,10.33,0,0,0-.55-1.47,6.79,6.79,0,0,0,.27-1.7l.06-1.87a19.65,19.65,0,0,0,5.94-5.14c2.5-3.33,3.73-8,3.78-12.87a25.48,25.48,0,0,0-3.59-13.87A20.75,20.75,0,0,0,109.68,36l-.45-.46c0-.21,0-.43.06-.64a9.81,9.81,0,0,0,1.4-.9A10.44,10.44,0,0,0,114,29.87Z"/>
                    </svg>
                    <p>Software as a Service</p>
                </div>
            </div>
        </section>
    </article>
</main>

<style>
    .card{
        wdth:125px;
        display:flex;
        flex-direction: column;
        align-items: center;
    }
    .cardholder{
        display:flex;
        flex-direction: row;
        justify-content:space-around
    }
    ol {
        margin: 0 1em 0 1em;
    }
    h3 {
        margin: 1em 0 1em 0;
    }
    svg{
        width:70px;
        height:70px;
    }
</style>
</MainLayout>