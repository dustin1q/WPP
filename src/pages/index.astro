---

import MainLayout from '../layouts/MainLayout.astro';
---

<MainLayout title="Overview">
<p>Today the web is overloaded with verbose frameworks solving simple problems, abstracting engineers & their architectures from native web interfaces.
 While frameworks can be helpful, adopting them often leads to overly complicated solutions that run slow and are hard to maintain. Many frameworks often solve problems that could otherwise be solved with lightweight native capabilities of HTML CSS & Javascript.
 <strong>
    The purpose of this site is to showcase lightweight native solutions using lesser known or emerging vanilla HTML Javascript & CSS capabilities as a low complexity alternative to framework adoption.
</strong> 
 Engineers may be encouraged to adopt these patterns and avoid using 3rd party libraries all together. This approach can reduce code complexity, improve performance, and deliver accessible industry best practice user experiences. 
</p>
<p>
    It's important to remember that all web based frameworks are built on a foundation of good old fashioned HTML, Javascript & CSS. Most web based UI frameworks are abstracted interfaces to native HTML Javascript and CSS. While the intent of web frameworks is to simplify access to native capabilities (HTML Javascript & CSS), the learning curve to adoption can be equal to its native counterpart.
</p>
<h3>Benefits adopting native UI solutions vs. a framework</h3>
<ul>
    <li><strong>Maintainability</strong> - Simply put, low complexity solutions are easier to maintain</li>
    <li><strong>Time-to-market</strong>- With lowered complexity is your architecture, engineers can respond to updates & enhancements faster</li>
    <li><strong>Application Performance</strong> - Native solutions leverage APIs the browser gives us for free. This reduces payloads shipped to the browser & overall hydration at the client. This pattern leads performance outcomes no framework can compete with.</li>
    <li><strong>Futureproof</strong> - Native solutions have a longer shelf-life over frameworks.</li>
    <li><strong>Documentation, Knowledge</strong> - Native solutions are well documented specifications that are easily accessed</li>
    <li><strong>Dependency free</strong> - All native solutions are dependency free which reduces risks to platform stability and regression.</li>
</ul>
<p>
   Leveraging modern HTML JS & CSS, architects can appreciate these benefits & avoid adopting verbose libraries in their solutions. 
   By showcasing interactive samples and discussing modern architectural patterns, this site aims to help architects throttle complexities, optimize the performance of your solutions and reduce dependancies. 
</p>
<p>
     Lets apply First principals philosophies when engineering our web solutions. 
    Remember: <i><strong>"The best part is no part. The best process is no process. It weighs nothing."</strong></i>
</p>

</MainLayout>
