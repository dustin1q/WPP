---

import MainLayout from '../../layouts/MainLayout.astro';
import MarkdownPostLayout from '../../layouts/MarkdownPostLayout.astro';

import CodeEditor from '../../components/CodeEditor.astro';
import '../../styles/live-code.css';


import { getCollection, CollectionEntry} from 'astro:content';
import { GetStaticPathsRemovedRSSHelper } from 'astro/dist/core/errors/errors-data';


export const getStaticPaths = async() => {
    const uiSamples = await getCollection("uiSamples");

    return uiSamples.map(sample=> ({
        
            params: {slug:sample.slug},
            props: {sample}
        
    }));
}

type Props = {
    sample: CollectionEntry<"uiSamples">
}
const {sample} = Astro.props;
const { Content } = await sample.render();

console.log(sample);
---


<MainLayout title={sample.data.title}>
    <p>
    {sample.data.desc}
    </p>
    
    <div class="container"> 
        <div class="left">
            <Content/>
        </div>
        <div class="right">
            <lable>Results</lable>
            <iframe id="results"></iframe>
        </div>
    </div>
</MainLayout>


<script>
    import * as ace from 'brace';
    import 'brace/mode/javascript';
    import 'brace/mode/css';
    import 'brace/mode/html';
    import 'brace/theme/twilight';
    import 'brace/theme/chrome';
    const htmlcontent = document.getElementById("HTML")?.innerHTML;
    console.log(htmlcontent)
        const html_editor = ace.edit("HTML");
        html_editor.session.setMode('ace/mode/html');
        html_editor.setTheme('ace/theme/twilight');
        html_editor.getSession().on('change', function() {runCode()});   
       
   
        
        const css_editor = ace.edit("CSS");
        css_editor.session.setMode('ace/mode/css');
        css_editor.setTheme('ace/theme/twilight');
        css_editor.getSession().on('change', function() {runCode()});
        
        const js_editor = ace.edit("JS");
        js_editor.session.setMode('ace/mode/javascript');
        js_editor.setTheme('ace/theme/twilight');
        js_editor.getSession().on('change', function() {runCode()});
        
        
        html_editor.setValue(htmlcontent) 
        html_editor.clearSelection();

   function runCode(){

    //editor.setReadOnly(true); 
    //let cssCode = "<style>"+css_editor.getValue()+"</style>";
   
   // let jsCode = javascript_editor.getValue();
    //add code to iframe
    let results = document.getElementById("results");
    //results.contentDocument.head.innerHTML= cssCode;
    if(document.getElementById("HTML")){
        let htmlCode = html_editor.getValue();
        results.contentDocument.body.innerHTML = htmlCode;
    }
    if(document.getElementById("CSS")){
        let cssCode = css_editor.getValue();
        if(cssCode.length == 0){
            let el = document.getElementById("CSS");
            el.innerHTML = "";
            el.className = '';
        }else{
            results.contentDocument.head.innerHTML =  "<style>"+cssCode+"</style>";
        }
    }
    if(document.getElementById("JS")){
        let jsCode = js_editor.getValue();
        if(jsCode.length == 0){
            let el = document.getElementById("JS");
            el.innerHTML = "";
            el.className = '';
        }else{
            results.contentWindow.eval(jsCode);
        }
    }
   
}
runCode();
    </script>